#!/bin/bash
:<<'END_COMMENT'
 * This software was created by United States Government employees
 * and may not be copyrighted.
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
 * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
END_COMMENT

exec > /tmp/getKernelSymbols.log 2>&1
CGC_OS_TYPE=$1
nohost="-o StrictHostKeyChecking=no"
port=5022
echo "getKernelSymbols for os type $CGC_OS_TYPE"
ssh-keygen -f ~/.ssh/known_hosts -R [localhost]:$port
scp -P $port $nohost targetStage/myip.txt vagrant@localhost:/tmp/host_ip.txt
scp -P $port $nohost /usr/bin/getMyIp vagrant@localhost:/tmp/
scp -P $port  $nohost /usr/share/cgc-monitor/prepTarget vagrant@localhost:/tmp/
scp -P $port  $nohost /usr/share/cgc-monitor/getKernelSymbolsOnTarget vagrant@localhost:/tmp/
echo "copy key files"
scp -P $port $nohost /usr/share/cgc-monitor/id_rsa* vagrant@localhost:/tmp/
#copy the simics-agent for file transfers
if [ $CGC_OS_TYPE == "linux" ]; then
   scp -P $port $nohost /mnt/vmLib/cgcForensicsRepo/targetPackages_cfe_linux/simics-agent localhost:/tmp/
   if [ "$?" -ne 0 ]; then
       echo "scp of agent failed, exit"
       exit
   fi
   #scp -P $port $nohost /mnt/simics/simicsWorkspace/targetStage/ethtool*.deb vagrant@localhost:/tmp/
   #scp -P $port  $nohost /usr/share/cgc-monitor/noOffload.sh vagrant@localhost:/tmp/
   #ssh -p $port $nohost vagrant@localhost '/tmp/noOffload.sh &'
elif [ $CGC_OS_TYPE == "linux64" ]; then
   scp -P $port $nohost /mnt/vmLib/cgcForensicsRepo/targetPackages_cfe_linux64/simics-agent localhost:/tmp/
elif [ $CGC_OS_TYPE == "freeBSD64" ]; then
   ssh -p $port $nohost vagrant@localhost "sudo ln -s /usr/local/bin/bash /bin/bash"
   scp -P $port $nohost /mnt/vmLib/cgcForensicsRepo/targetPackages_cfe64/simics-agent localhost:/tmp/
else
   ssh -p $port $nohost vagrant@localhost "sudo ln -s /usr/local/bin/bash /bin/bash"
   scp -P $port $nohost /mnt/vmLib/cgcForensicsRepo/targetPackages_cfe/simics-agent localhost:/tmp/
fi
ssh -p $port $nohost vagrant@localhost '/tmp/prepTarget YES NO YES '
echo "done with prepTarget"
done="NO"
while [ $done == "NO" ]; do
    ssh -p $port $nohost vagrant@localhost 'sudo su - cgc -c /tmp/getKernelSymbolsOnTarget &'
    if [ "$?" -ne 0 ]; then
       echo "ssh of getKernelSymbolsOnTarget failed, try again"
       sleep 1
    else
       echo "got symbols on target ok"
       done="YES"
    fi
done
echo "done with getKernelSymbols"

