#!/bin/bash
:<<'END_COMMENT'
 * This software was created by United States Government employees
 * and may not be copyrighted.
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
 * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
END_COMMENT

#
# Convert a std decree VM cgc vm to a cgc-monitor target
#
export one_box=$1
export POV=$2
export NO_SERVICE=$3
sudo rm -f /tmp/prepTarget.log
exec >> /tmp/prepTarget.log 2>&1
echo "begin prepTarget one_box is $one_box POV is $POV"
uname=`uname`
#export eth_dev=bge0
export eth_dev=em0
if [ $uname != "FreeBSD" ] && [ $uname != "FreeBSD64" ]; then
   eth_dev=eth0
   echo "not FreeBSD"
   sudo cp /tmp/interfaces /etc/network/interfaces
   sudo /etc/init.d/networking restart
   sudo ifconfig eth1 up
   sudo route add default gw 10.10.0.1
   echo "sudo route add default gw 10.10.0.1"
   #
   # on vcpu, dhclient somehow steps on the routing table!
   #
   PROC=$(ps aux | grep '[d]hclient' | grep -v tail | awk '{print $2}')
   if [ $? -eq 0 ]; then
       echo killing dhcp client $PROC
       if [ ! -z "$PROC" ]; then
          sudo kill $PROC
       fi
   fi

   sudo adduser --disabled-password --gecos "" cgc
   sudo adduser cgc sudo
   echo "cgc ALL=NOPASSWD:ALL" | sudo tee -a /etc/sudoers
   #sudo tar -C /usr/local -xzf /tmp/go1*.gz
   #sudo ln -s /usr/local/go/bin/go /usr/bin/go
   #echo "10.20.200.241 linuxrepo" | sudo tee -a /etc/hosts
   #sudo mv /etc/apt/sources.list /etc/apt/sources.list.orig
   #echo "deb http://linuxrepo:3142/ftp.us.debian.org/debian/ wheezy main" | sudo tee -a /etc/apt/sources.list
   #sudo apt-get update
else
   # FreeBSD
   sudo pw groupadd cgc
   sudo mkdir -p /home/cgc
   sudo pw adduser cgc -g cgc -g wheel
   sudo chown cgc:cgc /home/cgc 
   echo "cgc ALL=NOPASSWD:ALL" | sudo tee -a /usr/local/etc/sudoers
   sudo service cron stop
   sudo service sendmail stop
   #sudo service dhclient stop bge0
   sudo service dhclient stop em0
   sudo ln -s /usr/local/bin/python /usr/bin/python


fi
sudo touch /etc/cgc-round
# put the cgc user's private key in its ssh directory
sudo mkdir -p ~cgc/.ssh
sudo chown cgc:cgc ~cgc/.ssh
sudo mkdir -p ~cgc/tmpReplays
sudo chown cgc:cgc ~cgc/tmpReplays
sudo cp /tmp/id_rs* ~cgc/.ssh/
sudo chown cgc:cgc ~cgc/.ssh/id_rs*
sudo chmod 400 ~cgc/.ssh/id_rs*
if [ "$NO_SERVICE" != "YES" ]; then
   source /tmp/startService
fi
