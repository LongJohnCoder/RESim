#!/usr/bin/python
'''
 * This software was created by United States Government employees
 * and may not be copyrighted.
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
 * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
'''
'''
Delete package nodes for a given instance
'''
import sys
import socket
try:
    from monitorLibs import szk
except:
    sys.path.append('../')
    from monitorLibs import szk
from monitorLibs import configMgr
def usage():
    print('clerPackages [instance] | [all end]')
end = 0
hostname = socket.gethostname()
cfg = configMgr.configMgr()
if len(sys.argv) > 1:
    if sys.argv[1] == 'all':
        end = int(sys.argv[2])
        for i in range(0, end):
            instance = '%s' % i
            print 'instance is '+instance
            zk = szk.szk(hostname, cfg, instance)
            zk.cleanPackages()
            zk.stop()
    else:
        instance = sys.argv[1]
        zk = szk.szk(hostname, cfg, instance)
        zk.cleanPackages()
        zk.stop()
else:
    usage()
