#!/bin/bash
:<<'END_COMMENT'
 * This software was created by United States Government employees
 * and may not be copyrighted.
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
 * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
END_COMMENT
#
#  Full workflow to prep monitoring system for an event, e.g., CQE
#
show_usage() {
   echo "continueEvent db_name event_name [no_db]"
   echo "\tPass in no_db to supress updating the scoring database"
}
if [ $# -lt 2 ]
then
    show_usage
    exit 1
else
    if [ $# -eq 3 ]
    then
        if [ ! $3 = "no_db" ]
        then
            show_usage
            exit 1
        fi
    fi
fi
# stop all slaves
ZM clean
sudo /etc/init.d/logUpdateService stop
sudo /etc/init.d/sqlUpdateService stop
ZM updatePackages
echo "wait for packages to update"
sleep 10
sudo /etc/init.d/logUpdateService start
sudo /etc/init.d/sqlUpdateService start $3
# update the monitor configuration
# so that all processes read the same data.
db="cgc_event_db=$1"
event="cgc_event=$2"
putMonitorCfg $db $event
# start slaves
ZM start
# Assumes challenge sets already gotten
# get submissions, never returns
if [ $# -gt 2 ]; then
    if [ $3 = 'no_db' ]; then
        echo "run with no db, will only process latest submits"
        getSubmits
    else
        show_usage
        exit 1
    fi
else
    getSubmits all
fi
