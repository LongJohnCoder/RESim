#!/usr/bin/python
'''
 * This software was created by United States Government employees
 * and may not be copyrighted.
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
 * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
'''
'''
Get the time from the master and set local clock

'''
import sys
from datetime import datetime
import socket
import subprocess
from monitorLibs import utils
from monitorLibs import szk
from monitorLibs import configMgr

def updateTime(master):
     retcode = subprocess.call(['/usr/bin/sudo', '/usr/sbin/ntpdate', '-u', master])

hostname = socket.gethostname()
cfg = configMgr.configMgr()
# NOTE szk will cause cfg to be updated via zookeeper
print('call szk to attach zookeeper')
zk = szk.szk(hostname, cfg)
print('back from call szk to attach zookeeper')
if cfg.repo_master is None:
    print('No repo master defined, run putMonitorCfg')
    exit(1)
repo_master = cfg.repo_master
myip = utils.getMyIP()
print('using %s as repoMaster, my ip is %s' % (repo_master, myip)) 
if myip != repo_master:
    updateTime(repo_master);
    print('back from updating time: %s' % str(datetime.now()))
else:
    print('I am the repo_master, did not update time')

zk.stop()
