#
#  Master confguration file, use for vetting
#  of POVs, will trace syscalls
#
[monitoring]
# no monitoring, go straight to the debugger when a CB 
# (or other debugged process) starts up
debug_cb = no
trace_cb = no
#debug_process = myopenssl
#taint_process = myopenssl
#taint_bytes = deadbeef
# whether to go to the debuger if events occur -- uses software tracking
stop_on_memory=no
stop_on_signal=no
stop_on_non_code=no
stop_on_rop=no
# create log file of all syscalls
log_sys_calls = no
# stop tracking a process after n consequative syscalls (0=never)
bail_on_failed_calls = 1000
# whether monitoring should update zookeeper nodes
zoo_keeper=yes
[kernel]
ps_strings=0xbfbfffff
#stack_size = 0x3e80000
stack_size = 0x5155555
# for linux, the following text sections and sizes are obtained by
# running ksections.py on the target.  These end up in ksections.cfg
# rather than here.
#text=0xc1000000
#text_size=0x305c2a
#text2=0xf8203000
#text_size2=0xa8d159
# cgc_text is now in cellConfig.py, cgc_text_size still comes from here
#cgc_text=0xc36fe000
cgc_text_size=0x5000
aslr=yes
[network host]
name=launcher
nox=no
protected_memory=yes
rop_cop=no
kernel_nox=yes
kernel_unx=yes
kernel_page_table=yes
kernel_rop=yes
watch_uid=yes
sys_calls=yes
[pov thrower]
name=cfe-pov-launcher
player=cfe-poll-player
nox=no
rop_cop=no
kernel_nox=yes
kernel_unx=yes
kernel_page_table=yes
kernel_rop=yes
watch_uid=yes
sys_calls=yes
watch_replay=no
[ids]
name=cfe-proxy
kernel_nox=yes
kernel_unx=yes
kernel_page_table=yes
kernel_rop=yes
watch_uid=yes
[logging]
level=debug
[rop profile]
record=no
file=pairs
count=2000
[tracing]
#target=myopenssl
